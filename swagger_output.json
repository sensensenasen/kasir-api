{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Kasir API",
    "description": "Ini adalah dokumentasi dari Kasir API, digunakan untuk kebutuhan aplikasi kasir"
  },
  "host": "kasir-api.app.senas.xyz",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoint User & Login"
    },
    {
      "name": "Gate",
      "description": "Endpoint untuk Barcode Pintu"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY",
      "description": "any description..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/token/{doorKey}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a specific user by token doorKey.",
        "parameters": [
          {
            "name": "doorKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to regiser user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Registering new user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/uploads": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to uploads profile image users",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "prevProfileImage": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to Login",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/id/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gate/logs": {
      "get": {
        "tags": [
          "Gate"
        ],
        "description": "Endpoint to get logs of gate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/gate/in/{doorKey}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "description": "Endpoint to gate in as user",
        "parameters": [
          {
            "name": "doorKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gate/generate": {
      "post": {
        "tags": [
          "Gate"
        ],
        "description": "Endpoint to generate barcode gate",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/gate/out/{doorKey}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "description": "Endpoint to gate out",
        "parameters": [
          {
            "name": "doorKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to get all products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to add new product",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Adding new product.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products/barcode/{barcode}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to get a specific product by barcode.",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products/uploads": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to uploads product image",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "prevProductImage": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products/id/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to update product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to delete product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Endpoint to add new orders",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "example": "any"
                },
                "customerid": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "transactionAmount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/all": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Endpoint to get all orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/id/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Endpoint to get orders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Endpoint to update orders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "example": "sena"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "email": {
          "type": "string",
          "example": "email@mail.com"
        },
        "userRole": {
          "type": "string",
          "example": "kasir"
        },
        "doorKey": {
          "type": "string",
          "example": "703ef48b-574f-4335-9590-cddc4daa70b4"
        },
        "fullName": {
          "type": "string",
          "example": "Muhamad Septiana"
        },
        "phone": {
          "type": "string",
          "example": "08121XXXXXXXX"
        },
        "gender": {
          "type": "string",
          "example": "laki-laki"
        },
        "profileImage": {
          "type": "string",
          "example": "link url"
        },
        "bio": {
          "type": "string",
          "example": "deskripsi bio"
        },
        "saldo": {
          "type": "number",
          "example": 1500000
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "example": "Indomilk Minuman Susu UHT 115ml"
        },
        "productVendor": {
          "type": "string",
          "example": "Indomilk"
        },
        "productCode": {
          "type": "string",
          "example": "8993007000086"
        },
        "productDescription": {
          "type": "string",
          "example": "Untuk membantu pertumbuhan si kecil"
        },
        "productImage": {
          "type": "string",
          "example": "url;url"
        },
        "quantityInStock": {
          "type": "number",
          "example": 100
        },
        "price": {
          "type": "number",
          "example": 17200
        }
      }
    }
  }
}